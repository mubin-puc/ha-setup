---

- name: Include HAProxy role for installation
  include_role:
    name: haproxy
  vars:
    haproxy_uninstall: false 
  tags:
    - haproxy

- name: enable overcommit in sysctl
  sysctl:
    name: vm.overcommit_memory
    value: "1"
    state: present
    reload: yes
    ignoreerrors: yes
  when: redis_travis_ci is not defined

- name: compile redis
  shell: umask 0022 && make MALLOC=libc -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool else '' }}
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: /usr/local/src/redis-{{ redis_version }}/src/redis-server

- name: create redis install directory
  file:
    path: "{{ redis_install_dir }}"
    state: directory
    mode: 0755

- name: check if redis user exists (ignore errors)
  command: id {{ redis_user }}
  ignore_errors: yes
  changed_when: false
  register: user_exists

- name: add redis group
  group:
    name: "{{ redis_group }}"
    state: present
  when: user_exists is failed

- name: add redis user
  user:
    name: "{{ redis_user }}"
    group: "{{ redis_group }}"
    comment: "Redis"
    home: "{{ redis_install_dir }}"
    shell: /bin/false
    system: yes
  when: user_exists is failed

- name: create /etc/redis
  file:
    path: /etc/redis
    state: directory
    mode: 0755
    owner: "{{ redis_user }}"

- name: create /var/run/redis
  file:
    path: /var/run/redis
    state: directory
    owner: "{{ redis_user }}"

- name: install redis
  shell: umask 0022 && make PREFIX={{ redis_install_dir }} install
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: "{{ redis_install_dir }}/bin/redis-server"

- name: list redis binaries to add to alternatives
  command: ls -1 {{ redis_install_dir }}/bin
  register: redis_binaries
  changed_when: false
  check_mode: false

- name: add redis binaries to alternatives
  alternatives:
    name: "{{ item }}"
    path: "{{ redis_install_dir }}/bin/{{ item }}"
    link: "/usr/bin/{{ item }}"
  with_items: "{{ redis_binaries.stdout_lines }}"
  when: redis_binaries is succeeded


- name: ensuring socat is installed
  package:
    name: socat
    state: present
  when: 
    - inventory_hostname in groups[spk|upper + '_' + dep_env|upper + '_' + 'redis']
  become: true

- name: checking if haproxy is running
  service:
    name: haproxy
    state: started
  register: haproxy_service
  when: 
    - inventory_hostname in groups[spk|upper + '_' + dep_env|upper + '_' + 'redis']
  become: true

- include_tasks:
    file: failover.yml
  loop: "{{ansible_play_hosts}}"
  loop_control:
    loop_var: hostname_items

- name: haproxy status
  shell: echo "show stat -1 4 -1" | socat /var/lib/haproxy/stats stdio | tail -4| cut -d "," -f 2,18 | column -s, -t
  become: true
  
- name: Display haproxy status
  debug:
    msg: "{{ haproxy_status_register.stdout_lines }}"     
  when: 
    - inventory_hostname in groups[spk + '_' + dep_env + '_' + 'postgres'] 
  run_once: true 





